#!/bin/sh

STAGED_GO_FILES=$(git diff --cached --name-only --diff-filter=d | grep ".go$")

if [[ "$STAGED_GO_FILES" = "" ]]; then
  exit 0
fi

GOLINT=$HOME/go/bin/golint
GOIMPORTS=$HOME/go/bin/goimports

# Check for golint
if [[ ! -x "$GOLINT" ]]; then
  printf "\t\033[41mPlease install golint\033[0m (go get -u golang.org/x/lint/golint)"
  exit 1
fi

# Check for goimports
if [[ ! -x "$GOIMPORTS" ]]; then
  printf "\t\033[41mPlease install goimports\033[0m (go get golang.org/x/tools/cmd/goimports)"
  exit 1
fi

PASS=true

for FILE in $STAGED_GO_FILES
do
  # Run goimports on the staged file
  $GOIMPORTS -w $FILE

  # Run golint on the staged file
  printf "\033[1;33m"
  $GOLINT $FILE | egrep -v -w "should have comment|lint suggestions; failing"
  printf "\033[0m"
done

# Run go vet for all project files
go vet $(go list ./... | grep -v /vendor/)
if [[ $? != 0 ]]; then
  printf "\t\033[0;30m\033[41mgo vet fails\033[0m\n"
  PASS=false
else
  printf "\t\033[0;30m\033[42mgo vet pass\033[0m\n"
fi


if ! $PASS; then
  printf "\033[0;30m\033[41mSome checks has failed, aborting commit\033[0m\n"
  exit 1
else
  printf "\033[0;30m\033[42mAll checks has passed\033[0m\n"
fi

exit 0